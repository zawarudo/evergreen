{"version":3,"sources":["webpack:///./src/pages/components/badge-and-pill.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent"],"mappings":"mPAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,sCACA,4BAAW,0BAAYC,WAAW,KAAvB,SAAX,QAAqE,0BAAYA,WAAW,KAAvB,QAArE,mDACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,SAApB,wDACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,QAApB,uCAEF,+BACA,4BAAW,0BAAYA,WAAW,KAAvB,SAAX,uFAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,2CAIL,uCACA,sCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,wgBAeL,uCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,wcAeL,gDACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,oSAgBL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,8RAgBL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,wRAgBL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,kRAgBL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,oRAgBL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,0PAgBL,YAAC,IAAD,CAAYC,GAAG,QAAQF,QAAQ,eAC/B,8BACA,4BAAW,0BAAYC,WAAW,KAAvB,QAAX,gDACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iJAOL,YAAC,IAAD,CAAYC,GAAG,OAAOF,QAAQ,gBAKlCH,EAAWM,gBAAiB","file":"component---src-pages-components-badge-and-pill-mdx-74937e87dd67f687fbfe.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/m/proj/curr/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Badge`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Pill`}</inlineCode>{` components are labels with a background color.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Badge`}</strong>{`: Used for state and text. Slightly rounded corners.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Pill`}</strong>{`: Used only for numbers. Circular.`}</li>\n    </ul>\n    <h1>{`Badge`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Badge`}</inlineCode>{` component should only be used for state and general text labels.\nNot for numbers.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Badge color=\"green\">Success</Badge>\n`}</code></pre>\n    <h2>{`Color options`}</h2>\n    <h3>{`Solid badges`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane>\n  <Badge color=\"neutral\" isSolid marginRight={8}>neutral</Badge>\n  <Badge color=\"green\" isSolid marginRight={8}>green</Badge>\n  <Badge color=\"blue\" isSolid marginRight={8}>blue</Badge>\n  <Badge color=\"red\" isSolid marginRight={8}>red</Badge>\n  <Badge color=\"orange\" isSolid marginRight={8}>orange</Badge>\n  <Badge color=\"purple\" isSolid marginRight={8}>purple</Badge>\n  <Badge color=\"yellow\" isSolid marginRight={8}>yellow</Badge>\n  <Badge color=\"teal\" isSolid marginRight={8}>teal</Badge>\n</Pane>\n`}</code></pre>\n    <h3>{`Subtle badges`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane>\n  <Badge color=\"neutral\" marginRight={8}>neutral</Badge>\n  <Badge color=\"green\" marginRight={8}>green</Badge>\n  <Badge color=\"blue\" marginRight={8}>blue</Badge>\n  <Badge color=\"red\" marginRight={8}>red</Badge>\n  <Badge color=\"orange\" marginRight={8}>orange</Badge>\n  <Badge color=\"purple\" marginRight={8}>purple</Badge>\n  <Badge color=\"yellow\" marginRight={8}>yellow</Badge>\n  <Badge color=\"teal\" marginRight={8}>teal</Badge>\n</Pane>\n`}</code></pre>\n    <h2>{`When to use what badge`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"green\">Success</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"green\" isSolid>Success</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Operational, available, done, approved, added</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"red\">Removed</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"red\" isSolid>Removed</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Errors, declined, failed, removed, critical</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"blue\">In progress</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"blue\" isSolid>In progress</Badge>\n  </Pane>\n  <Pane>\n    <Strong>In progress, open, modified</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"purple\">Trial</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"purple\" isSolid>Trial</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Trial, new, information, help</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"yellow\">Moved</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"yellow\" isSolid>Moved</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Busy, blocked, missing, warning</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"neutral\">Beta</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"neutral\" isSolid>Beta</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Betag</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <PropsTable of=\"Badge\" mdxType=\"PropsTable\" />\n    <h1>{`Pill`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Pill`}</inlineCode>{` component should only be used for numbers. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Pane>\n  <Pill display=\"inline-flex\" margin={8}>0</Pill>\n  <Pill display=\"inline-flex\" margin={8} color=\"red\" isSolid>24</Pill>\n</Pane>\n`}</code></pre>\n    <PropsTable of=\"Pill\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}