{"version":3,"sources":["webpack:///./src/pages/components/checkbox.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent"],"mappings":"mPAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,sCACA,4BAAW,0BAAYC,WAAW,KAAvB,YAAX,oDACA,yCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gXAWL,0CACA,4BAAW,0BAAYA,WAAW,KAAvB,YAAX,uDAAuH,0BAAYA,WAAW,KAAvB,YAAvH,kBACE,0BAAYA,WAAW,KAAvB,oBADF,0DAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,2PAYL,qCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,2EAQL,YAAC,IAAD,CAAYC,GAAG,WAAWF,QAAQ,gBAKtCH,EAAWM,gBAAiB","file":"component---src-pages-components-checkbox-mdx-374d13db743cadd2c031.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/m/proj/curr/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Checkbox`}</inlineCode>{` component maps to a checkbox input and a label.`}</p>\n    <h2>{`Checkbox states`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Pane>\n  <Checkbox label=\"Checkbox default\" />\n  <Checkbox checked label=\"Checkbox checked\" />\n  <Checkbox disabled label=\"Checkbox disabled\" />\n  <Checkbox disabled checked label=\"Checkbox checked disabled\" />\n  <Checkbox indeterminate label=\"Checkbox indeterminate\" />\n  <Checkbox checked indeterminate label=\"Checkbox checked indeterminate\" />\n</Pane>\n`}</code></pre>\n    <h2>{`Controlled usage`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Checkbox`}</inlineCode>{` component passes on the original event through the `}<inlineCode parentName=\"p\">{`onChange`}</inlineCode>{` handler.\nUse `}<inlineCode parentName=\"p\">{`e.target.checked`}</inlineCode>{` to get the latest value and update state accordingly.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ checked: true }}>\n  {({ state, setState }) => (\n    <Checkbox\n      label=\"Controlled usage\"\n      checked={state.checked}\n      onChange={e => setState({ checked: e.target.checked })}\n    />\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Add margins`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Checkbox\n  label=\"Add margins\"\n  checked\n  marginBottom={40}\n/>\n`}</code></pre>\n    <PropsTable of=\"Checkbox\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}