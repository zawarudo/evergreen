(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{957:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return c}));t(5),t(6),t(4),t(7),t(2),t(0);var o=t(120),a=t(940),l=t(941);var i={},u={_frontmatter:i},r=a.a;function c(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(o.b)(r,Object.assign({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",null,"Introduction"),Object(o.b)("p",null,"Evergreen exports multiple component to help create menus.\nAll components are accessible through the ",Object(o.b)("inlineCode",{parentName:"p"},"Menu")," component."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Menu"),": menu wrapper, helps with focus management."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Menu.Item"),": single menu item button. Contains labels and icons."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Menu.Group"),": group menu items together."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Menu.Divider"),": menu divider to divide menu groups visually."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Menu.OptionsGroup"),": menu group which works like a radio group.")),Object(o.b)("h2",null,"Focus management"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Menu")," component is used to help with focus management."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Arrow down on a button will bring focus inside the popover."),Object(o.b)("li",{parentName:"ul"},"Arrow keys within the menu will cycle through all of the menu items and skip ",Object(o.b)("inlineCode",{parentName:"li"},"disabled")," items."),Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"Home")," key (fn + arrow left) will go to the first item."),Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"End")," key (fn + arrow right) will go to the last item.")),Object(o.b)("h2",null,"Menu without icons"),Object(o.b)("p",null,"All examples below will show the ",Object(o.b)("inlineCode",{parentName:"p"},"Menu")," inside of a ",Object(o.b)("inlineCode",{parentName:"p"},"Popover"),".\nIt is important to understand the ",Object(o.b)("inlineCode",{parentName:"p"},"Menu")," component by itself does not manage a dropdown interaction."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Menu>\n  <Menu.Group>\n    <Menu.Item>Share...</Menu.Item>\n    <Menu.Item>Move...</Menu.Item>\n    <Menu.Item>Rename...</Menu.Item>\n  </Menu.Group>\n  <Menu.Divider />\n  <Menu.Group>\n    <Menu.Item intent="danger">Delete...</Menu.Item>\n  </Menu.Group>\n</Menu>\n')),Object(o.b)("h2",null,"Using ",Object(o.b)("inlineCode",{parentName:"h2"},"onSelect")," handlers"),Object(o.b)("p",null,"Menu items support a ",Object(o.b)("inlineCode",{parentName:"p"},"onSelect")," handler that is triggered on click and ",Object(o.b)("inlineCode",{parentName:"p"},"enter")," + ",Object(o.b)("inlineCode",{parentName:"p"},"space")," key down."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Menu.Item\n  onSelect={() => toaster.notify('Hello world')}\n>\n  Say hello\n</Menu.Item>\n")),Object(o.b)("h2",null,"Dropdown menu"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Popover\n  position={Position.BOTTOM_LEFT}\n  content={\n    <Menu>\n      <Menu.Group>\n        <Menu.Item\n          onSelect={() => toaster.notify('Share')}\n        >\n          Share...\n        </Menu.Item>\n        <Menu.Item\n          onSelect={() => toaster.notify('Move')}\n        >\n          Move...\n        </Menu.Item>\n        <Menu.Item\n          onSelect={() => toaster.notify('Rename')}\n          secondaryText=\"⌘R\"\n        >\n          Rename...\n        </Menu.Item>\n      </Menu.Group>\n      <Menu.Divider />\n      <Menu.Group>\n        <Menu.Item\n          onSelect={() => toaster.danger('Delete')}\n          intent=\"danger\"\n        >\n          Delete...\n        </Menu.Item>\n      </Menu.Group>\n    </Menu>\n  }\n>\n  <Button marginRight={16}>Without Icons</Button>\n</Popover>\n")),Object(o.b)("h2",null,"Menu with icons"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"onSelect")," handlers are omitted for brevity."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Popover\n  position={Position.BOTTOM_LEFT}\n  content={\n    <Menu>\n      <Menu.Group>\n        <Menu.Item icon="people">Share...</Menu.Item>\n        <Menu.Item icon="circle-arrow-right">Move...</Menu.Item>\n        <Menu.Item icon="edit" secondaryText="⌘R">\n          Rename...\n        </Menu.Item>\n      </Menu.Group>\n      <Menu.Divider />\n      <Menu.Group>\n        <Menu.Item icon="trash" intent="danger">\n          Delete...\n        </Menu.Item>\n      </Menu.Group>\n    </Menu>\n  }\n>\n  <Button marginRight={16}>With Icons</Button>\n</Popover>\n')),Object(o.b)("h2",null,"Groups with titles"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"onSelect")," handlers are omitted for brevity."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Popover\n  position={Position.BOTTOM_LEFT}\n  content={\n    <Menu>\n      <Menu.Group title="Actions">\n        <Menu.Item icon="people">Share...</Menu.Item>\n        <Menu.Item icon="circle-arrow-right">Move...</Menu.Item>\n        <Menu.Item icon="edit" secondaryText="⌘R">\n          Rename...\n        </Menu.Item>\n      </Menu.Group>\n      <Menu.Divider />\n      <Menu.Group title="destructive">\n        <Menu.Item icon="trash" intent="danger">\n          Delete...\n        </Menu.Item>\n      </Menu.Group>\n    </Menu>\n  }\n>\n  <Button marginRight={16}>With Group Titles</Button>\n</Popover>\n')),Object(o.b)("h2",null,"Menu option groups"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Menu.OptionsGroup")," is useful inside of table headers to help with sorting and filtering options."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Menu>\n  <Component\n    initialState={{\n      selected: 'asc'\n    }}\n  >\n    {({ state, setState }) => {\n      return (\n        <Menu.OptionsGroup\n          title=\"Order\"\n          options={[\n            { label: 'Ascending', value: 'asc' },\n            { label: 'Descending', value: 'desc' }\n          ]}\n          selected={state.selected}\n          onChange={selected => setState({ selected })}\n        />\n      )\n    }}\n  </Component>\n\n  <Menu.Divider />\n\n  <Component\n    initialState={{\n      selected: 'email'\n    }}\n  >\n    {({ state, setState }) => {\n      return (\n        <Menu.OptionsGroup\n          title=\"Show\"\n          options={[\n            { label: 'Email', value: 'email' },\n            { label: 'Phone', value: 'phone' },\n            { label: 'State', value: 'state' },\n            { label: 'Country', value: 'country' },\n            { label: 'Type', value: 'type' }\n          ]}\n          selected={state.selected}\n          onChange={selected => setState({ selected })}\n        />\n      )\n    }}\n  </Component>\n</Menu>\n")),Object(o.b)("h2",null,"Custom menu items"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Menu")," by itself offers focus management to elements inside of the component that\neither have ",Object(o.b)("inlineCode",{parentName:"p"},'[role="menuitemradio"]')," or ",Object(o.b)("inlineCode",{parentName:"p"},'[role="menuitem"]'),"."),Object(o.b)("p",null,"The focus styles are currently not working in the docs, sorry for the inconvenience!"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Popover\n  position={Position.BOTTOM_LEFT}\n  content={\n    <Menu>\n      <ul>\n        <li>\n          <a href="#..." role="menuitem">\n            Hey Evergreen,\n          </a>\n        </li>\n        <li>\n          <a href="#..." role="menuitem">\n            I want custom items\n          </a>\n        </li>\n        <hr />\n        <li>\n          <a href="#..." role="menuitem">\n            Oh sweet\n          </a>\n        </li>\n      </ul>\n    </Menu>\n  }\n>\n  <Button>Custom Menu Items</Button>\n</Popover>\n')),Object(o.b)(l.a,{of:"Menu",mdxType:"PropsTable"}),Object(o.b)(l.a,{of:"MenuItem",mdxType:"PropsTable"}),Object(o.b)(l.a,{of:"MenuGroup",mdxType:"PropsTable"}),Object(o.b)(l.a,{of:"MenuOptionsGroup",mdxType:"PropsTable"}),Object(o.b)(l.a,{of:"MenuDivider",mdxType:"PropsTable"}))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-menu-mdx-6d982d281955f0b501da.js.map