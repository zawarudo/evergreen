{"version":3,"sources":["webpack:///./src/pages/components/menu.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent"],"mappings":"oPAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,sCACA,8HACwC,0BAAYC,WAAW,KAAvB,QADxC,eAEA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,QAApB,gDACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,aAApB,yDACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,cAApB,gCACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,gBAApB,kDACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,qBAApB,iDAEF,0CACA,4BAAW,0BAAYA,WAAW,KAAvB,QAAX,qDACA,sBACE,kBAAIA,WAAW,MAAf,+DACA,kBAAIA,WAAW,MAAf,gFAAqG,0BAAYA,WAAW,MAAvB,YAArG,WACA,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,QAA5B,qDACA,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,OAA5B,sDAEF,4CACA,yDAAwC,0BAAYA,WAAW,KAAvB,QAAxC,gBAAyG,0BAAYA,WAAW,KAAvB,WAAzG,wCACgC,0BAAYA,WAAW,KAAvB,QADhC,gEAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iRAcL,+BAAc,0BAAYA,WAAW,MAAvB,YAAd,aACA,6CAA4B,0BAAYA,WAAW,KAAvB,YAA5B,2CAA4H,0BAAYA,WAAW,KAAvB,SAA5H,MAAoL,0BAAYA,WAAW,KAAvB,SAApL,cACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iGAQL,uCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,4zBAuCL,yCACA,4BAAW,0BAAYA,WAAW,KAAvB,YAAX,sCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,2jBAyBL,4CACA,4BAAW,0BAAYA,WAAW,KAAvB,YAAX,sCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,smBAyBL,4CACA,4BAAW,0BAAYA,WAAW,KAAvB,qBAAX,kFACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wkCAiDL,2CACA,4BAAW,0BAAYA,WAAW,KAAvB,QAAX,4FACU,0BAAYA,WAAW,KAAvB,0BADV,OACoF,0BAAYA,WAAW,KAAvB,qBADpF,KAEA,6GACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,shBA8BL,YAAC,IAAD,CAAYC,GAAG,OAAOF,QAAQ,eAC9B,YAAC,IAAD,CAAYE,GAAG,WAAWF,QAAQ,eAClC,YAAC,IAAD,CAAYE,GAAG,YAAYF,QAAQ,eACnC,YAAC,IAAD,CAAYE,GAAG,mBAAmBF,QAAQ,eAC1C,YAAC,IAAD,CAAYE,GAAG,cAAcF,QAAQ,gBAKzCH,EAAWM,gBAAiB","file":"component---src-pages-components-menu-mdx-6d982d281955f0b501da.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/m/proj/curr/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`Evergreen exports multiple component to help create menus.\nAll components are accessible through the `}<inlineCode parentName=\"p\">{`Menu`}</inlineCode>{` component.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Menu`}</strong>{`: menu wrapper, helps with focus management.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Menu.Item`}</strong>{`: single menu item button. Contains labels and icons.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Menu.Group`}</strong>{`: group menu items together.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Menu.Divider`}</strong>{`: menu divider to divide menu groups visually.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Menu.OptionsGroup`}</strong>{`: menu group which works like a radio group.`}</li>\n    </ul>\n    <h2>{`Focus management`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Menu`}</inlineCode>{` component is used to help with focus management.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Arrow down on a button will bring focus inside the popover.`}</li>\n      <li parentName=\"ul\">{`Arrow keys within the menu will cycle through all of the menu items and skip `}<inlineCode parentName=\"li\">{`disabled`}</inlineCode>{` items.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`Home`}</inlineCode>{` key (fn + arrow left) will go to the first item.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`End`}</inlineCode>{` key (fn + arrow right) will go to the last item.`}</li>\n    </ul>\n    <h2>{`Menu without icons`}</h2>\n    <p>{`All examples below will show the `}<inlineCode parentName=\"p\">{`Menu`}</inlineCode>{` inside of a `}<inlineCode parentName=\"p\">{`Popover`}</inlineCode>{`.\nIt is important to understand the `}<inlineCode parentName=\"p\">{`Menu`}</inlineCode>{` component by itself does not manage a dropdown interaction.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Menu>\n  <Menu.Group>\n    <Menu.Item>Share...</Menu.Item>\n    <Menu.Item>Move...</Menu.Item>\n    <Menu.Item>Rename...</Menu.Item>\n  </Menu.Group>\n  <Menu.Divider />\n  <Menu.Group>\n    <Menu.Item intent=\"danger\">Delete...</Menu.Item>\n  </Menu.Group>\n</Menu>\n`}</code></pre>\n    <h2>{`Using `}<inlineCode parentName=\"h2\">{`onSelect`}</inlineCode>{` handlers`}</h2>\n    <p>{`Menu items support a `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` handler that is triggered on click and `}<inlineCode parentName=\"p\">{`enter`}</inlineCode>{` + `}<inlineCode parentName=\"p\">{`space`}</inlineCode>{` key down.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Menu.Item\n  onSelect={() => toaster.notify('Hello world')}\n>\n  Say hello\n</Menu.Item>\n`}</code></pre>\n    <h2>{`Dropdown menu`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Popover\n  position={Position.BOTTOM_LEFT}\n  content={\n    <Menu>\n      <Menu.Group>\n        <Menu.Item\n          onSelect={() => toaster.notify('Share')}\n        >\n          Share...\n        </Menu.Item>\n        <Menu.Item\n          onSelect={() => toaster.notify('Move')}\n        >\n          Move...\n        </Menu.Item>\n        <Menu.Item\n          onSelect={() => toaster.notify('Rename')}\n          secondaryText=\"⌘R\"\n        >\n          Rename...\n        </Menu.Item>\n      </Menu.Group>\n      <Menu.Divider />\n      <Menu.Group>\n        <Menu.Item\n          onSelect={() => toaster.danger('Delete')}\n          intent=\"danger\"\n        >\n          Delete...\n        </Menu.Item>\n      </Menu.Group>\n    </Menu>\n  }\n>\n  <Button marginRight={16}>Without Icons</Button>\n</Popover>\n`}</code></pre>\n    <h2>{`Menu with icons`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` handlers are omitted for brevity.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Popover\n  position={Position.BOTTOM_LEFT}\n  content={\n    <Menu>\n      <Menu.Group>\n        <Menu.Item icon=\"people\">Share...</Menu.Item>\n        <Menu.Item icon=\"circle-arrow-right\">Move...</Menu.Item>\n        <Menu.Item icon=\"edit\" secondaryText=\"⌘R\">\n          Rename...\n        </Menu.Item>\n      </Menu.Group>\n      <Menu.Divider />\n      <Menu.Group>\n        <Menu.Item icon=\"trash\" intent=\"danger\">\n          Delete...\n        </Menu.Item>\n      </Menu.Group>\n    </Menu>\n  }\n>\n  <Button marginRight={16}>With Icons</Button>\n</Popover>\n`}</code></pre>\n    <h2>{`Groups with titles`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` handlers are omitted for brevity.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Popover\n  position={Position.BOTTOM_LEFT}\n  content={\n    <Menu>\n      <Menu.Group title=\"Actions\">\n        <Menu.Item icon=\"people\">Share...</Menu.Item>\n        <Menu.Item icon=\"circle-arrow-right\">Move...</Menu.Item>\n        <Menu.Item icon=\"edit\" secondaryText=\"⌘R\">\n          Rename...\n        </Menu.Item>\n      </Menu.Group>\n      <Menu.Divider />\n      <Menu.Group title=\"destructive\">\n        <Menu.Item icon=\"trash\" intent=\"danger\">\n          Delete...\n        </Menu.Item>\n      </Menu.Group>\n    </Menu>\n  }\n>\n  <Button marginRight={16}>With Group Titles</Button>\n</Popover>\n`}</code></pre>\n    <h2>{`Menu option groups`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Menu.OptionsGroup`}</inlineCode>{` is useful inside of table headers to help with sorting and filtering options.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Menu>\n  <Component\n    initialState={{\n      selected: 'asc'\n    }}\n  >\n    {({ state, setState }) => {\n      return (\n        <Menu.OptionsGroup\n          title=\"Order\"\n          options={[\n            { label: 'Ascending', value: 'asc' },\n            { label: 'Descending', value: 'desc' }\n          ]}\n          selected={state.selected}\n          onChange={selected => setState({ selected })}\n        />\n      )\n    }}\n  </Component>\n\n  <Menu.Divider />\n\n  <Component\n    initialState={{\n      selected: 'email'\n    }}\n  >\n    {({ state, setState }) => {\n      return (\n        <Menu.OptionsGroup\n          title=\"Show\"\n          options={[\n            { label: 'Email', value: 'email' },\n            { label: 'Phone', value: 'phone' },\n            { label: 'State', value: 'state' },\n            { label: 'Country', value: 'country' },\n            { label: 'Type', value: 'type' }\n          ]}\n          selected={state.selected}\n          onChange={selected => setState({ selected })}\n        />\n      )\n    }}\n  </Component>\n</Menu>\n`}</code></pre>\n    <h2>{`Custom menu items`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Menu`}</inlineCode>{` by itself offers focus management to elements inside of the component that\neither have `}<inlineCode parentName=\"p\">{`[role=\"menuitemradio\"]`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`[role=\"menuitem\"]`}</inlineCode>{`.`}</p>\n    <p>{`The focus styles are currently not working in the docs, sorry for the inconvenience!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Popover\n  position={Position.BOTTOM_LEFT}\n  content={\n    <Menu>\n      <ul>\n        <li>\n          <a href=\"#...\" role=\"menuitem\">\n            Hey Evergreen,\n          </a>\n        </li>\n        <li>\n          <a href=\"#...\" role=\"menuitem\">\n            I want custom items\n          </a>\n        </li>\n        <hr />\n        <li>\n          <a href=\"#...\" role=\"menuitem\">\n            Oh sweet\n          </a>\n        </li>\n      </ul>\n    </Menu>\n  }\n>\n  <Button>Custom Menu Items</Button>\n</Popover>\n`}</code></pre>\n    <PropsTable of=\"Menu\" mdxType=\"PropsTable\" />\n    <PropsTable of=\"MenuItem\" mdxType=\"PropsTable\" />\n    <PropsTable of=\"MenuGroup\" mdxType=\"PropsTable\" />\n    <PropsTable of=\"MenuOptionsGroup\" mdxType=\"PropsTable\" />\n    <PropsTable of=\"MenuDivider\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}