{"version":3,"sources":["webpack:///./src/pages/components/portal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent"],"mappings":"oPAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,sCACA,4BAAW,0BAAYC,WAAW,KAAvB,UAAX,sDAAoH,0BAAYA,WAAW,KAAvB,yBAApH,UACF,+BAAGA,WAAW,KAAQ,CAChB,KAAQ,0CADd,uDAGE,oFAAmE,0BAAYA,WAAW,KAAvB,WAAnE,QAA+H,0BAAYA,WAAW,KAAvB,cAA/H,2EAEA,iCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,oKAQL,YAAC,IAAD,CAAYC,GAAG,SAASF,QAAQ,gBAKpCH,EAAWM,gBAAiB","file":"component---src-pages-components-portal-mdx-4692cdfafbee032f5042.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/m/proj/curr/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Portal`}</inlineCode>{` component is a utility component to help with the `}<inlineCode parentName=\"p\">{`ReactDOM.createPortal`}</inlineCode>{` API.\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/portals.html\"\n      }}>{`Learn more about portal on the official React docs`}</a></p>\n    <p>{`Portals are used throughout Evergreen in components such as `}<inlineCode parentName=\"p\">{`Overlay`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode>{` to provide\na robust way of rendering outside of the current DOM tree.`}</p>\n    <h2>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Portal>\n  <Pane background=\"red\" padding={24} position=\"fixed\" bottom={0}>\n    <Text color=\"white\">Look ma, I am in a portal!</Text>\n  </Pane>\n</Portal>\n`}</code></pre>\n    <PropsTable of=\"Portal\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}