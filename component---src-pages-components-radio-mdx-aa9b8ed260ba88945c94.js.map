{"version":3,"sources":["webpack:///./src/pages/components/radio.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent"],"mappings":"oPAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,sCACA,iOAGA,4FACA,sBACE,kBAAIC,WAAW,MAAK,sBAAQA,WAAW,MAAnB,SAApB,wBAAuF,0BAAYA,WAAW,MAAvB,SAAvF,aACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,cAApB,sDAEF,oCACA,4BAAW,0BAAYA,WAAW,KAAvB,cAAX,mEACA,sCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,kcAsBL,qCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,yeAwBL,YAAC,IAAD,CAAYC,GAAG,aAAaF,QAAQ,eACpC,+BACA,sCACA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,iTASL,+CACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,oXAcL,YAAC,IAAD,CAAYC,GAAG,QAAQF,QAAQ,gBAKnCH,EAAWM,gBAAiB","file":"component---src-pages-components-radio-mdx-aa9b8ed260ba88945c94.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/m/proj/curr/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`The radio and radio group are used for selecting a single option from a list.\nIf you need to have an unselected state, just add a radio button with a None option.\nBegin labels with a capital letter.`}</p>\n    <p>{`Evergreen exports two components to create radios and radio groups:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Radio`}</strong>{`: Directly maps to a `}<inlineCode parentName=\"li\">{`input`}</inlineCode>{` element.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`RadioGroup`}</strong>{`: Helps manage a group of radios. Try this first.`}</li>\n    </ul>\n    <h1>{`RadioGroup`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`RadioGroup`}</inlineCode>{` is the preferred way to create radio groups in most use cases.`}</p>\n    <h2>{`Default size`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component\n  initialState={{\n    options: [\n      { label: 'Read-only', value: 'read-only' },\n      { label: 'Write', value: 'write' },\n      { label: 'Restricted', value: 'restricted' }\n    ],\n    value: 'restricted'\n  }}\n>\n  {({ state, setState }) => (\n    <RadioGroup\n      label=\"Permissions\"\n      value={state.value}\n      options={state.options}\n      onChange={value => setState({ value })}\n    />\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Bigger size`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component\n  initialState={{\n    options: [\n      { label: 'Read-only', value: 'read-only' },\n      { label: 'Write', value: 'write' },\n      { label: 'Restricted', value: 'restricted' }\n    ],\n    value: 'restricted'\n  }}\n>\n  {({ state, setState }) => (\n    <RadioGroup\n      marginTop={40}\n      size={16}\n      label=\"Permissions\"\n      value={state.value}\n      options={state.options}\n      onChange={value => setState({ value })}\n    />\n  )}\n</Component>\n`}</code></pre>\n    <PropsTable of=\"RadioGroup\" mdxType=\"PropsTable\" />\n    <h1>{`Radio`}</h1>\n    <h2>{`Radio states`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Pane aria-label=\"Radio Group Label 12\" role=\"group\">\n  <Radio checked name=\"group\" label=\"Radio default\" />\n  <Radio name=\"group\" checked label=\"Radio checked\" />\n  <Radio name=\"group\" disabled label=\"Radio disabled\" />\n  <Radio name=\"group\" disabled label=\"Radio checked disabled\" />\n</Pane>\n`}</code></pre>\n    <h2>{`Radio states (bigger)`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Pane aria-label=\"Radio Group Label 16\" role=\"group\">\n  <Radio checked size={16} name=\"group2\" label=\"Radio default\" />\n  <Radio size={16} name=\"group2\" checked label=\"Radio checked\" />\n  <Radio size={16} name=\"group2\" disabled label=\"Radio disabled\" />\n  <Radio\n    size={16}\n    name=\"group2\"\n    disabled\n    label=\"Radio checked disabled\"\n  />\n</Pane>\n`}</code></pre>\n    <PropsTable of=\"Radio\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}