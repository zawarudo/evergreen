{"version":3,"sources":["webpack:///./src/pages/components/search-input.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent"],"mappings":"oPAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,4BAAW,0BAAYC,WAAW,KAAvB,eAAX,6CAAgH,0BAAYA,WAAW,KAAvB,aAAhH,wDAC6B,0BAAYA,WAAW,KAAvB,aAD7B,KAEA,uCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,qDAIL,oCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,kEAIL,uCACA,4BAAW,0BAAYA,WAAW,KAAvB,eAAX,aAAgF,0BAAYA,WAAW,KAAvB,UAAhF,+BACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iEAIL,kCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,+BAIL,qCACA,4BAAW,0BAAYA,WAAW,KAAvB,eAAX,oBAAuF,0BAAYA,WAAW,KAAvB,OAAvF,6DAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,mFAIL,0CACA,4BAAW,0BAAYA,WAAW,KAAvB,eAAX,sCAAyG,0BAAYA,WAAW,KAAvB,SAAzG,mBACE,0BAAYA,WAAW,KAAvB,kBADF,kDAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iNAWL,YAAC,IAAD,CAAYC,GAAG,cAAcF,QAAQ,gBAKzCH,EAAWM,gBAAiB","file":"component---src-pages-components-search-input-mdx-edd28d1914eda37a2769.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/m/proj/curr/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`The `}<inlineCode parentName=\"p\">{`SearchInput`}</inlineCode>{` component is a component that combines a `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode>{` with a search icon.\nIt works exactly the same as a `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode>{`.`}</p>\n    <h2>{`Basic example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SearchInput placeholder=\"Filter traits...\" />\n`}</code></pre>\n    <h2>{`Full width`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SearchInput placeholder=\"Filter traits...\" width=\"100%\" />\n`}</code></pre>\n    <h2>{`Change height`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`SearchInput`}</inlineCode>{` uses the `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` property to resize itself.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SearchInput placeholder=\"Filter traits...\" height={40} />\n`}</code></pre>\n    <h2>{`Disabled`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SearchInput disabled />\n`}</code></pre>\n    <h2>{`Add margins`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`SearchInput`}</inlineCode>{` is based on the `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` layout primitive\nand accepts setting margin properties.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SearchInput placeholder=\"Filter traits...\" height={40} marginBottom={40} />\n`}</code></pre>\n    <h2>{`Controlled usage`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`SearchInput`}</inlineCode>{` component works the same as using `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` directly.\nUse `}<inlineCode parentName=\"p\">{`e.target.value`}</inlineCode>{` to get the value of the component on change. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ value: ''}}>\n  {({ state, setState }) => (\n    <SearchInput\n      onChange={e => setState({ value: e.target.value })}\n      value={state.value}\n    />\n  )}\n</Component>\n`}</code></pre>\n    <PropsTable of=\"SearchInput\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}