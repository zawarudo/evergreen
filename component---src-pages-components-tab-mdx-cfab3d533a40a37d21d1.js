(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{969:function(e,a,n){"use strict";n.r(a),n.d(a,"_frontmatter",(function(){return l})),n.d(a,"default",(function(){return o}));n(5),n(6),n(4),n(7),n(2),n(0);var t=n(120),b=n(940),i=n(941);var l={},s={_frontmatter:l},r=b.a;function o(e){var a=e.components,n=function(e,a){if(null==e)return{};var n,t,b={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(b[n]=e[n]);return b}(e,["components"]);return Object(t.b)(r,Object.assign({},s,n,{components:a,mdxType:"MDXLayout"}),Object(t.b)("h2",null,"Introduction"),Object(t.b)("p",null,"Evergreen exports the following components to build tabbed navigation."),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("strong",{parentName:"li"},"Tab"),": the base horizontal tab component."),Object(t.b)("li",{parentName:"ul"},Object(t.b)("strong",{parentName:"li"},"SidebarTab"),": a vertical tab component used in sidebars."),Object(t.b)("li",{parentName:"ul"},Object(t.b)("strong",{parentName:"li"},"Tablist"),": a accessibility helper component used when tabs toggle panels on the page."),Object(t.b)("li",{parentName:"ul"},Object(t.b)("strong",{parentName:"li"},"TabNavigation"),": a accessibility helper component used when tabs are links.")),Object(t.b)("h2",null,"Presentational examples"),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Tab>Default tab</Tab>\n")),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Tab isSelected>Selected</Tab>\n")),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Tab onSelect={() => alert('selected!')}>Select handler</Tab>\n")),Object(t.b)("h2",null,"Accessibility"),Object(t.b)("p",null,"The ",Object(t.b)("inlineCode",{parentName:"p"},"Tab")," component should be wrapped in a ",Object(t.b)("inlineCode",{parentName:"p"},"Tablist")," or ",Object(t.b)("inlineCode",{parentName:"p"},"TabNavigation")," component\nto comply to ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"http://accessibility.athena-ict.com/aria/examples/tabpanel2.shtml"}),"WAI-ARIA")," accessibility standards."),Object(t.b)("p",null,"If you are not using a link (",Object(t.b)("inlineCode",{parentName:"p"},"a")," tag) for your Tab,\nmake sure to wrap in a ",Object(t.b)("inlineCode",{parentName:"p"},"Tablist"),", see examples below."),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"collapse",collapse:!0}),"<Component\n  initialState={{\n    selectedIndex: 0,\n    tabs: ['Traits', 'Event History', 'Identities']\n  }}\n>\n  {({ state, setState }) => (\n    <Pane height={120}>\n      <Tablist marginBottom={16} flexBasis={240} marginRight={24}>\n        {state.tabs.map((tab, index) => (\n          <Tab\n            key={tab}\n            id={tab}\n            onSelect={() => setState({ selectedIndex: index })}\n            isSelected={index === state.selectedIndex}\n            aria-controls={`panel-${tab}`}\n          >\n            {tab}\n          </Tab>\n        ))}\n      </Tablist>\n      <Pane padding={16} background=\"tint1\" flex=\"1\">\n        {state.tabs.map((tab, index) => (\n          <Pane\n            key={tab}\n            id={`panel-${tab}`}\n            role=\"tabpanel\"\n            aria-labelledby={tab}\n            aria-hidden={index !== state.selectedIndex}\n            display={index === state.selectedIndex ? 'block' : 'none'}\n          >\n            <Paragraph>Panel {tab}</Paragraph>\n          </Pane>\n        ))}\n      </Pane>\n    </Pane>\n  )}\n</Component>\n")),Object(t.b)("h2",null,"Tab Link usage"),Object(t.b)("p",null,"If you are using a link (",Object(t.b)("inlineCode",{parentName:"p"},"a")," tag), make sure to wrap your tabs in a ",Object(t.b)("inlineCode",{parentName:"p"},"TabNavigation")," component."),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<TabNavigation>\n  {['Traits', 'Event History', 'Identities'].map((tab, index) => (\n    <Tab key={tab} is=\"a\" href=\"#\" id={tab} isSelected={index === 0}>\n      {tab}\n    </Tab>\n  ))}\n</TabNavigation>\n")),Object(t.b)(i.a,{of:"Tab",mdxType:"PropsTable"}),Object(t.b)("h1",null,"Sidebar tabs"),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"collapse",collapse:!0}),"<Component\n  initialState={{\n    selectedIndex: 0,\n    tabs: ['Traits', 'Event History', 'Identities']\n  }}\n>\n  {({ state, setState }) => (\n    <Pane display=\"flex\" height={240}>\n      <Tablist marginBottom={16} flexBasis={240} marginRight={24}>\n        {state.tabs.map((tab, index) => (\n          <SidebarTab\n            key={tab}\n            id={tab}\n            onSelect={() => setState({ selectedIndex: index })}\n            isSelected={index === state.selectedIndex}\n            aria-controls={`panel-${tab}`}\n          >\n            {tab}\n          </SidebarTab>\n        ))}\n      </Tablist>\n      <Pane padding={16} background=\"tint1\" flex=\"1\">\n        {state.tabs.map((tab, index) => (\n          <Pane\n            key={tab}\n            id={`panel-${tab}`}\n            role=\"tabpanel\"\n            aria-labelledby={tab}\n            aria-hidden={index !== state.selectedIndex}\n            display={index === state.selectedIndex ? 'block' : 'none'}\n          >\n            <Paragraph>Panel {tab}</Paragraph>\n          </Pane>\n        ))}\n      </Pane>\n    </Pane>\n  )}\n</Component>\n")),Object(t.b)("h2",null,"Sidebar tab Link usage"),Object(t.b)("p",null,"If you are using a link (",Object(t.b)("inlineCode",{parentName:"p"},"a")," tag), make sure to wrap your tabs in a ",Object(t.b)("inlineCode",{parentName:"p"},"TabNavigation")," component."),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<TabNavigation marginX={-4} marginBottom={16}>\n  {['Traits', 'Event History', 'Identities'].map((tab, index) => (\n    <SidebarTab\n      key={tab}\n      is=\"a\"\n      href=\"#\"\n      id={tab}\n      isSelected={index === 0}\n    >\n      {tab}\n    </SidebarTab>\n  ))}\n</TabNavigation>\n")),Object(t.b)(i.a,{of:"SidebarTab",mdxType:"PropsTable"}),Object(t.b)(i.a,{of:"TabNavigation",mdxType:"PropsTable"}),Object(t.b)(i.a,{of:"Tablist",mdxType:"PropsTable"}))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-tab-mdx-cfab3d533a40a37d21d1.js.map