{"version":3,"sources":["webpack:///./src/pages/components/tab.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent"],"mappings":"oPAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,sCACA,+FACA,sBACE,kBAAIC,WAAW,MAAK,sBAAQA,WAAW,MAAnB,OAApB,wCACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,cAApB,gDACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,WAApB,gFACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,iBAApB,iEAEF,iDACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6BAIL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,qCAIL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,oEAIL,uCACA,4BAAW,0BAAYA,WAAW,KAAvB,OAAX,qCAAgG,0BAAYA,WAAW,KAAvB,WAAhG,OAA2J,0BAAYA,WAAW,KAAvB,iBAA3J,4BACW,+BAAGA,WAAW,KAAQ,CAC7B,KAAQ,sEADD,YADX,6BAIA,qDAAoC,0BAAYA,WAAW,KAAvB,KAApC,+CACqB,0BAAYA,WAAW,KAAvB,WADrB,yBAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,klCA2CL,wCACA,iDAAgC,0BAAYA,WAAW,KAAvB,KAAhC,2CAAyH,0BAAYA,WAAW,KAAvB,iBAAzH,eACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uNAUL,YAAC,IAAD,CAAYC,GAAG,MAAMF,QAAQ,eAC7B,sCACA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,WACd,UAAY,IAHX,inCA2CL,gDACA,iDAAgC,0BAAYA,WAAW,KAAvB,KAAhC,2CAAyH,0BAAYA,WAAW,KAAvB,iBAAzH,eACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6SAgBL,YAAC,IAAD,CAAYC,GAAG,aAAaF,QAAQ,eACpC,YAAC,IAAD,CAAYE,GAAG,gBAAgBF,QAAQ,eACvC,YAAC,IAAD,CAAYE,GAAG,UAAUF,QAAQ,gBAKrCH,EAAWM,gBAAiB","file":"component---src-pages-components-tab-mdx-cfab3d533a40a37d21d1.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/m/proj/curr/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`Evergreen exports the following components to build tabbed navigation.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Tab`}</strong>{`: the base horizontal tab component.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`SidebarTab`}</strong>{`: a vertical tab component used in sidebars.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Tablist`}</strong>{`: a accessibility helper component used when tabs toggle panels on the page.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`TabNavigation`}</strong>{`: a accessibility helper component used when tabs are links.`}</li>\n    </ul>\n    <h2>{`Presentational examples`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Tab>Default tab</Tab>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Tab isSelected>Selected</Tab>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Tab onSelect={() => alert('selected!')}>Select handler</Tab>\n`}</code></pre>\n    <h2>{`Accessibility`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component should be wrapped in a `}<inlineCode parentName=\"p\">{`Tablist`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`TabNavigation`}</inlineCode>{` component\nto comply to `}<a parentName=\"p\" {...{\n        \"href\": \"http://accessibility.athena-ict.com/aria/examples/tabpanel2.shtml\"\n      }}>{`WAI-ARIA`}</a>{` accessibility standards.`}</p>\n    <p>{`If you are not using a link (`}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` tag) for your Tab,\nmake sure to wrap in a `}<inlineCode parentName=\"p\">{`Tablist`}</inlineCode>{`, see examples below.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Component\n  initialState={{\n    selectedIndex: 0,\n    tabs: ['Traits', 'Event History', 'Identities']\n  }}\n>\n  {({ state, setState }) => (\n    <Pane height={120}>\n      <Tablist marginBottom={16} flexBasis={240} marginRight={24}>\n        {state.tabs.map((tab, index) => (\n          <Tab\n            key={tab}\n            id={tab}\n            onSelect={() => setState({ selectedIndex: index })}\n            isSelected={index === state.selectedIndex}\n            aria-controls={\\`panel-\\${tab}\\`}\n          >\n            {tab}\n          </Tab>\n        ))}\n      </Tablist>\n      <Pane padding={16} background=\"tint1\" flex=\"1\">\n        {state.tabs.map((tab, index) => (\n          <Pane\n            key={tab}\n            id={\\`panel-\\${tab}\\`}\n            role=\"tabpanel\"\n            aria-labelledby={tab}\n            aria-hidden={index !== state.selectedIndex}\n            display={index === state.selectedIndex ? 'block' : 'none'}\n          >\n            <Paragraph>Panel {tab}</Paragraph>\n          </Pane>\n        ))}\n      </Pane>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Tab Link usage`}</h2>\n    <p>{`If you are using a link (`}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` tag), make sure to wrap your tabs in a `}<inlineCode parentName=\"p\">{`TabNavigation`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<TabNavigation>\n  {['Traits', 'Event History', 'Identities'].map((tab, index) => (\n    <Tab key={tab} is=\"a\" href=\"#\" id={tab} isSelected={index === 0}>\n      {tab}\n    </Tab>\n  ))}\n</TabNavigation>\n`}</code></pre>\n    <PropsTable of=\"Tab\" mdxType=\"PropsTable\" />\n    <h1>{`Sidebar tabs`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Component\n  initialState={{\n    selectedIndex: 0,\n    tabs: ['Traits', 'Event History', 'Identities']\n  }}\n>\n  {({ state, setState }) => (\n    <Pane display=\"flex\" height={240}>\n      <Tablist marginBottom={16} flexBasis={240} marginRight={24}>\n        {state.tabs.map((tab, index) => (\n          <SidebarTab\n            key={tab}\n            id={tab}\n            onSelect={() => setState({ selectedIndex: index })}\n            isSelected={index === state.selectedIndex}\n            aria-controls={\\`panel-\\${tab}\\`}\n          >\n            {tab}\n          </SidebarTab>\n        ))}\n      </Tablist>\n      <Pane padding={16} background=\"tint1\" flex=\"1\">\n        {state.tabs.map((tab, index) => (\n          <Pane\n            key={tab}\n            id={\\`panel-\\${tab}\\`}\n            role=\"tabpanel\"\n            aria-labelledby={tab}\n            aria-hidden={index !== state.selectedIndex}\n            display={index === state.selectedIndex ? 'block' : 'none'}\n          >\n            <Paragraph>Panel {tab}</Paragraph>\n          </Pane>\n        ))}\n      </Pane>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Sidebar tab Link usage`}</h2>\n    <p>{`If you are using a link (`}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` tag), make sure to wrap your tabs in a `}<inlineCode parentName=\"p\">{`TabNavigation`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<TabNavigation marginX={-4} marginBottom={16}>\n  {['Traits', 'Event History', 'Identities'].map((tab, index) => (\n    <SidebarTab\n      key={tab}\n      is=\"a\"\n      href=\"#\"\n      id={tab}\n      isSelected={index === 0}\n    >\n      {tab}\n    </SidebarTab>\n  ))}\n</TabNavigation>\n`}</code></pre>\n    <PropsTable of=\"SidebarTab\" mdxType=\"PropsTable\" />\n    <PropsTable of=\"TabNavigation\" mdxType=\"PropsTable\" />\n    <PropsTable of=\"Tablist\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}