(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{971:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return p})),n.d(t,"default",(function(){return s}));n(5),n(6),n(4),n(7),n(2),n(0);var a=n(120),l=n(940),i=n(941);var p={},b={_frontmatter:p},c=l.a;function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,["components"]);return Object(a.b)(c,Object.assign({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",null,"Introduction"),Object(a.b)("p",null,"Evergreen exports two components to create text inputs:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"TextInput"),": base text input component. Directly maps to a ",Object(a.b)("inlineCode",{parentName:"li"},"input")," element."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"TextInputField"),": combines a label, text input and validation message in one. Used for traditional forms.")),Object(a.b)("h1",null,"TextInput"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"TextInput")," component is a basic text input component.\nIt directly maps to a ",Object(a.b)("inlineCode",{parentName:"p"},"input")," element."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextInput\n  name="text-input-name"\n  placeholder="Text input placeholder..."\n/>\n')),Object(a.b)("h2",null,"Controlled usage"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"TextInput")," component works the same as using ",Object(a.b)("inlineCode",{parentName:"p"},"input")," directly.\nUse ",Object(a.b)("inlineCode",{parentName:"p"},"e.target.value")," to get the value of the component on change. "),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Component initialState={{ value: ''}}>\n  {({ state, setState }) => (\n    <TextInput\n      onChange={e => setState({ value: e.target.value })}\n      value={state.value}\n    />\n  )}\n</Component>\n")),Object(a.b)("h2",null,"Disabled"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<TextInput disabled />\n")),Object(a.b)("h2",null,"Invalid"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<TextInput isInvalid />\n")),Object(a.b)("h2",null,"Change height"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"TextIput")," uses the ",Object(a.b)("inlineCode",{parentName:"p"},"height")," property to resize itself."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Pane>\n  <TextInput height={24} marginRight={16} />\n  <TextInput height={40} />\n</Pane>\n")),Object(a.b)("h2",null,"Change width"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Pane>\n  <TextInput width="100%" marginBottom={16} />\n  <TextInput width={320} />\n</Pane>\n')),Object(a.b)(i.a,{of:"TextInput",mdxType:"PropsTable"}),Object(a.b)("h1",null,"TextInputField"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"TextInputField")," component combines a ",Object(a.b)("inlineCode",{parentName:"p"},"TextInput")," with a label and optional\n",Object(a.b)("inlineCode",{parentName:"p"},"description"),", ",Object(a.b)("inlineCode",{parentName:"p"},"validationMessage")," and ",Object(a.b)("inlineCode",{parentName:"p"},"hint"),"."),Object(a.b)("h2",null,"Label and description"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextInputField\n  label="Default text input field"\n  description="This is a description."\n  placeholder="Placeholder text"\n/>\n')),Object(a.b)("h2",null,"A hint is under the text input"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextInputField\n  label="Default text input field"\n  hint="This is a hint."\n  placeholder="Placeholder text"\n/>\n')),Object(a.b)("h2",null,"Required text input field"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextInputField\n  id="ids-are-optional"\n  label="A required text input field"\n  required\n  description="This is a description."\n  placeholder="Placeholder text"\n/>\n')),Object(a.b)("h2",null,"Invalid field"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextInputField\n  isInvalid\n  required\n  label="A required text input field"\n  description="This is a description."\n  validationMessage="This field is required"\n/>\n')),Object(a.b)("h2",null,"Validation message without invalid input"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextInputField\n  isInvalid={false}\n  required\n  label="A required text input field"\n  description="This is a description."\n  validationMessage="This field is required"\n/>\n')),Object(a.b)("h2",null,"Controlled usage"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"TextInputField")," component works the same as using ",Object(a.b)("inlineCode",{parentName:"p"},"input")," directly.\nUse ",Object(a.b)("inlineCode",{parentName:"p"},"e.target.value")," to get the value of the component on change. "),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Component initialState={{ value: \'\' }}>\n  {({ state, setState }) => (\n    <TextInputField\n      label="A controlled text input field"\n      required\n      description="This is a description."\n      value={state.value}\n      onChange={e => setState({ value: e.target.value })}\n    />\n  )}\n</Component>\n')),Object(a.b)(i.a,{of:"TextInputField",mdxType:"PropsTable"}))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-text-input-mdx-b75ff9aaba16c9357b74.js.map