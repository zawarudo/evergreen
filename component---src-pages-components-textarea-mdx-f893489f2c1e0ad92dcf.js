(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{972:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return r})),t.d(a,"default",(function(){return s}));t(5),t(6),t(4),t(7),t(2),t(0);var n=t(120),l=t(940),i=t(941);var r={},b={_frontmatter:r},o=l.a;function s(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,["components"]);return Object(n.b)(o,Object.assign({},b,t,{components:a,mdxType:"MDXLayout"}),Object(n.b)("h2",null,"Introduction"),Object(n.b)("p",null,"Similar to text inputs, Evergreen exports two components to create text areas:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"Textarea"),": base text area component. Directly maps to a ",Object(n.b)("inlineCode",{parentName:"li"},"textarea")," element."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"TextareaField"),": combines a label, textarea  and validation message in one. Used for traditional forms.")),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Textarea\n  name="textarea-1"\n  placeholder="Textarea placeholder..."\n/>\n')),Object(n.b)("h2",null,"Textarea with a label"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Pane>\n  <Label\n    htmlFor="textarea-2"\n    marginBottom={4}\n    display="block"\n  >\n    Label\n  </Label>\n  <Textarea\n    id="textarea-2"\n    placeholder="Textarea placeholder..."\n  />\n</Pane>\n')),Object(n.b)("h2",null,"Controlled usage"),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"Textarea")," component works the same as using ",Object(n.b)("inlineCode",{parentName:"p"},"textarea")," directly.\nUse ",Object(n.b)("inlineCode",{parentName:"p"},"e.target.value")," to get the value of the component on change."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Component initialState={{ value: 'Hello'}}>\n  {({ state, setState }) => (\n    <Textarea\n      onChange={e => setState({ value: e.target.value })}\n      value={state.value}\n    />\n  )}\n</Component>\n")),Object(n.b)(i.a,{of:"Textarea",mdxType:"PropsTable"}),Object(n.b)("h1",null,"TextareaField"),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"TextareaField")," component combines a ",Object(n.b)("inlineCode",{parentName:"p"},"Textarea")," with a label and optional\n",Object(n.b)("inlineCode",{parentName:"p"},"description"),", ",Object(n.b)("inlineCode",{parentName:"p"},"validationMessage")," and ",Object(n.b)("inlineCode",{parentName:"p"},"hint"),"."),Object(n.b)("h2",null,"Label and description"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextareaField\n  label="Default textarea field"\n  description="This is a description."\n  placeholder="Placeholder text"\n/>\n')),Object(n.b)("h2",null,"A hint is under the textarea"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextareaField\n  label="Default textarea field"\n  hint="This is a hint."\n  placeholder="Placeholder text"\n/>\n')),Object(n.b)("h2",null,"Required textarea field"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextareaField\n  id="ids-are-optional"\n  label="A required textarea field"\n  required\n  description="This is a description."\n  placeholder="Placeholder text"\n/>\n')),Object(n.b)("h2",null,"Invalid field"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextareaField\n  isInvalid\n  required\n  label="A required textarea field"\n  description="This is a description."\n  validationMessage="This field is required"\n/>\n')),Object(n.b)("h2",null,"Validation message without invalid input"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<TextareaField\n  isInvalid={false}\n  required\n  label="A required textarea field"\n  description="This is a description."\n  validationMessage="This field is required"\n/>\n')),Object(n.b)("h2",null,"Controlled usage"),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"TextareaField")," component works the same as using ",Object(n.b)("inlineCode",{parentName:"p"},"textarea")," directly.\nUse ",Object(n.b)("inlineCode",{parentName:"p"},"e.target.value")," to get the value of the component on change."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Component initialState={{ value: \'\' }}>\n  {({ state, setState }) => (\n    <TextareaField\n      label="A controlled text input field"\n      required\n      description="This is a description."\n      value={state.value}\n      onChange={e => setState({ value: e.target.value })}\n    />\n  )}\n</Component>\n')),Object(n.b)(i.a,{of:"TextareaField",mdxType:"PropsTable"}))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-textarea-mdx-f893489f2c1e0ad92dcf.js.map