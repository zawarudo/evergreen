(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{973:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return c}));t(5),t(6),t(4),t(7),t(2),t(0);var a=t(120),o=t(940);var s={},l={_frontmatter:s},i=o.a;function c(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,["components"]);return Object(a.b)(i,Object.assign({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",null,"Introduction"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"toaster")," is used to show toasts (alerts) on top of an overlay.\nThe toasts will close themselves when the close button is clicked,\nor after a timeout — the default is 5 seconds."),Object(a.b)("h3",null,"When To Use"),Object(a.b)("p",null,"When you want to give feedback to your users about a action they take.\nOften this is in the form of creation or deletion."),Object(a.b)("h3",null,"Implementation details"),Object(a.b)("p",null,"A toast is simply a wrapper around the ",Object(a.b)("inlineCode",{parentName:"p"},"Alert")," component and has the same kind of types as an alert.\nThe following types are available:"),Object(a.b)("h3",null,"Types of toasts"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"info"),": ",Object(a.b)("inlineCode",{parentName:"li"},"toaster.notify()")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"success"),": ",Object(a.b)("inlineCode",{parentName:"li"},"toaster.success()")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"warning"),": ",Object(a.b)("inlineCode",{parentName:"li"},"toaster.warning()")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"danger"),": ",Object(a.b)("inlineCode",{parentName:"li"},"toaster.danger()"))),Object(a.b)("h3",null,"Closing all toasts"),Object(a.b)("p",null,"In some situations toasts might become outdated before they expire.\nFor example when showing a toast in a setup flow, canceling out of that setup flow might make the toast irrelevant."),Object(a.b)("p",null,"In those situations you can use ",Object(a.b)("inlineCode",{parentName:"p"},"toaster.closeAll()")," to close all open toasts."),Object(a.b)("h2",null,"Keep around when mouse over"),Object(a.b)("p",null,"When the use hovers (mouse overs) the toast it will stop the countdown timer and the toast\nwill stay alive as long as the toast is being hovered."),Object(a.b)("h3",null,"Self managed"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"toaster")," manages state itself — and uses ",Object(a.b)("inlineCode",{parentName:"p"},"ReactDOM")," to show toasts.\nThe ",Object(a.b)("inlineCode",{parentName:"p"},"toaster")," is an instance of the ",Object(a.b)("inlineCode",{parentName:"p"},"Toaster")," class."),Object(a.b)("h2",null,"Notify"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onClick={() =>\n    toaster.notify(\n      'Evergreen is a open-source design system'\n    )\n  }\n>\n  Notify\n</Button>\n")),Object(a.b)("h2",null,"Success"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onClick={() =>\n    toaster.success(\n      'Your source is now sending data'\n    )\n  }\n>\n  Success\n</Button>\n")),Object(a.b)("h2",null,"Warning"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onClick={() =>\n    toaster.warning(\n      'Changes will affect all Warehouses'\n    )\n  }\n>\n  Warning\n</Button>\n")),Object(a.b)("h2",null,"Danger"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onClick={() =>\n    toaster.danger(\n      'Something went wrong trying to create your audience'\n    )\n  }\n>\n  Danger\n</Button>\n")),Object(a.b)("h2",null,"Close all"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onClick={() =>\n    toaster.closeAll()\n  }\n>\n  Close All\n</Button>\n")),Object(a.b)("h2",null,"Adding a description"),Object(a.b)("p",null,"A ",Object(a.b)("inlineCode",{parentName:"p"},"description")," is used as the children of the ",Object(a.b)("inlineCode",{parentName:"p"},"Alert")," component.\nThe description can be a React node."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onClick={() =>\n    toaster.success(\n      'Your source is now sending data',\n      {\n        description: 'Connect your source to a destination to receive data.'\n      }\n    )\n  }\n>\n  Success with description\n</Button>\n")),Object(a.b)("h2",null,"Toasts with custom duration"),Object(a.b)("p",null,"It is possible to add a custom duration when showing a toast.\nThe default ",Object(a.b)("inlineCode",{parentName:"p"},"duration")," is ",Object(a.b)("inlineCode",{parentName:"p"},"5")," seconds.\nThe ",Object(a.b)("inlineCode",{parentName:"p"},"duration")," property is in seconds — not milliseconds."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onClick={() =>\n    toaster.success(\n      'Stick around for 10 seconds',\n      {\n        duration: 10\n      }\n    )\n  }\n>\n  10 Seconds\n</Button>\n")),Object(a.b)("h2",null,"Unique toasts"),Object(a.b)("p",null,"There are cases when it's only one toast with the same content can be shown at a time.\nPassing a unique ID via ",Object(a.b)("inlineCode",{parentName:"p"},"id")," property allows Evergreen to close all previous toasts with the same ID, before showing a new one."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onClick={() =>\n    toaster.warning('Only one toaster will be shown', {\n      id: 'forbidden-action'\n    })\n  }\n>\n  Show only one toaster\n</Button>\n")))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-toaster-mdx-a63fc66071007d31b8fb.js.map