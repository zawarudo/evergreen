{"version":3,"sources":["webpack:///./src/components/TextStylePreview.js","webpack:///./src/pages/components/typography.mdx"],"names":["TextStylePreview","getFontFamilyVariable","Object","keys","this","props","fontFamilies","find","key","fontFamily","render","Pane","display","marginTop","paddingTop","borderTop","flexShrink","flexGrow","flex","paddingRight","renderComponent","className","style","marginBottom","fontSize","fontWeight","lineHeight","letterSpacing","color","Fragment","React","Component","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","theme","borderBottom","paddingBottom","typography","headings","map","size","Heading","text","Text","Paragraph","PropsTable","of","isMDXComponent"],"mappings":"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","file":"component---src-pages-components-typography-mdx-5db65fb2bb3f99c99d05.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from 'evergreen-ui'\n\nexport default class TextStylePreview extends React.Component {\n  static propTypes = {\n    renderComponent: PropTypes.func.isRequired,\n    fontSize: PropTypes.string,\n    fontWeight: PropTypes.string,\n    lineHeight: PropTypes.string,\n    letterSpacing: PropTypes.string,\n    marginTop: PropTypes.number,\n    fontFamilies: PropTypes.object,\n    fontFamily: PropTypes.string,\n    color: PropTypes.string\n  }\n\n  getFontFamilyVariable() {\n    return (\n      Object.keys(this.props.fontFamilies).find(key => {\n        return this.props.fontFamilies[key] === this.props.fontFamily\n      }) || this.props.fontFamily\n    )\n  }\n\n  render() {\n    return (\n      <Pane display=\"flex\" marginTop={24} paddingTop={24} borderTop>\n        <Pane flexShrink={0} flexGrow={1} flex={1} paddingRight={12}>\n          {this.props.renderComponent()}\n        </Pane>\n        <Pane flexShrink={0} flexGrow={1} flex={1} className=\"Content\">\n          <p className=\"paragraph\" style={{ marginTop: 0, marginBottom: 0 }}>\n            Font family: <strong>{this.getFontFamilyVariable()}</strong>\n            <br />\n            Font size: <strong>{this.props.fontSize}</strong>\n            <br />\n            Font weight: <strong>{this.props.fontWeight}</strong>\n            <br />\n            Line height: <strong>{this.props.lineHeight}</strong>\n            <br />\n            Letter spacing: <strong>{this.props.letterSpacing}</strong>\n            <br />\n            {this.props.color && (\n              <React.Fragment>\n                color: <strong>{this.props.color}</strong>\n                <br />\n              </React.Fragment>\n            )}\n            {this.props.marginTop && (\n              <React.Fragment>\n                Default margin top:{' '}\n                <strong>\n                  {this.props.marginTop}\n                  px\n                </strong>\n                <br />\n              </React.Fragment>\n            )}\n          </p>\n        </Pane>\n      </Pane>\n    )\n  }\n}\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/m/proj/curr/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nimport TextStylePreview from 'components/TextStylePreview';\nimport { ThemeConsumer, Pane, Heading, Text, Paragraph } from 'evergreen-ui';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Text components`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Heading`}</strong>{`: used for headings. A `}<inlineCode parentName=\"li\">{`h2`}</inlineCode>{` element by default.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Text`}</strong>{`: used for single line text. A `}<inlineCode parentName=\"li\">{`span`}</inlineCode>{` element by default.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Paragraph`}</strong>{`: used for multiline text. A `}<inlineCode parentName=\"li\">{`p`}</inlineCode>{` element by default.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Link`}</strong>{`: used for links. A `}<inlineCode parentName=\"li\">{`a`}</inlineCode>{` element by default.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Strong`}</strong>{`: used to make text strong. A `}<inlineCode parentName=\"li\">{`strong`}</inlineCode>{` element by default.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Small`}</strong>{`: used for inline small text. A `}<inlineCode parentName=\"li\">{`small`}</inlineCode>{` element by default.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Pre`}</strong>{`: used for preformatted content. A `}<inlineCode parentName=\"li\">{`pre`}</inlineCode>{` element by default.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Code`}</strong>{`: used for inline code. A `}<inlineCode parentName=\"li\">{`code`}</inlineCode>{` element by default.`}</li>\n    </ul>\n    <h2>{`List components`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`OrderedList`}</strong>{`: used for ordered lists. A `}<inlineCode parentName=\"li\">{`ol`}</inlineCode>{` element.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`UnorderedList`}</strong>{`: used for unordered lists. A `}<inlineCode parentName=\"li\">{`ul`}</inlineCode>{` element.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ListItem`}</strong>{`: used as the list item in either an unordered list, or ordered list. A `}<inlineCode parentName=\"li\">{`li`}</inlineCode>{` element.`}</li>\n    </ul>\n    <h2>{`Font families`}</h2>\n    <p>{`Evergreen uses three font family stacks, `}<inlineCode parentName=\"p\">{`ui`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`display`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`mono`}</inlineCode>{`.\nText components will set the font family accordingly to their use case.\nThere is not need for you to override this on a component level.`}</p>\n    <ThemeConsumer mdxType=\"ThemeConsumer\">\n  {theme => <div>\n      <Pane marginTop={48} mdxType=\"Pane\">\n        <h2 className=\"heading h2\">Heading Styles</h2>\n      </Pane>\n      <Pane borderBottom paddingBottom={24} mdxType=\"Pane\">\n        {Object.keys(theme.typography.headings).map(size => {\n            return <TextStylePreview key={size} size={size} renderComponent={() => {\n              return <Heading size={size} mdxType=\"Heading\">Heading {size}</Heading>;\n            }} fontFamilies={theme.typography.fontFamilies} {...theme.typography.headings[size]} mdxType=\"TextStylePreview\" />;\n          })}\n      </Pane>\n      <Pane marginTop={48} mdxType=\"Pane\">\n        <h2 className=\"heading h2\">Text Styles</h2>\n      </Pane>\n      <Pane borderBottom paddingBottom={24} mdxType=\"Pane\">\n        {Object.keys(theme.typography.text).map(size => {\n            return <TextStylePreview key={size} size={size} renderComponent={() => {\n              return <Text size={size} mdxType=\"Text\">Text {size}</Text>;\n            }} fontFamilies={theme.typography.fontFamilies} fontFamily=\"ui\" {...theme.typography.text[size]} mdxType=\"TextStylePreview\" />;\n          })}\n      </Pane>\n      <Pane marginTop={48} mdxType=\"Pane\">\n        <h2 className=\"heading h2\">Paragraph Styles</h2>\n      </Pane>\n      <Pane borderBottom paddingBottom={24} mdxType=\"Pane\">\n        {[300, 400, 500].map(size => {\n            return <TextStylePreview key={size} size={size} renderComponent={() => {\n              return <Paragraph size={size} mdxType=\"Paragraph\">\n                    Paragraph {size}. Lorem ipsum dolor sit amet, consectetur\n                    adipiscing elit, sed do eiusmod tempor incididunt ut\n                    labore et dolore magna aliqua.\n                  </Paragraph>;\n            }} fontFamilies={theme.typography.fontFamilies} fontFamily=\"ui\" {...theme.typography.text[size]} mdxType=\"TextStylePreview\" />;\n          })}\n      </Pane>\n    </div>}\n    </ThemeConsumer>\n    <h1>{`Heading component`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Heading`}</inlineCode>{` component is used for all headings.`}</p>\n    <p>{`The size options are: `}<inlineCode parentName=\"p\">{`100`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`200`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`300`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`400`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`500`}</inlineCode>{` (default), `}<inlineCode parentName=\"p\">{`600`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`700`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`800`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`900`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Pane>\n  <Heading size={100} marginTop=\"default\">100: The quick brown fox jumps over the lazy dog</Heading>\n  <Heading size={200} marginTop=\"default\">200: The quick brown fox jumps over the lazy dog</Heading>\n  <Heading size={300} marginTop=\"default\">300: The quick brown fox jumps over the lazy dog</Heading>\n  <Heading size={400} marginTop=\"default\">400: The quick brown fox jumps over the lazy dog</Heading>\n  <Heading size={500} marginTop=\"default\">500: The quick brown fox jumps over the lazy dog</Heading>\n  <Heading size={600} marginTop=\"default\">600: The quick brown fox jumps over the lazy dog</Heading>\n  <Heading size={700} marginTop=\"default\">700: The quick brown fox jumps over the lazy dog</Heading>\n  <Heading size={800} marginTop=\"default\">800: The quick brown fox jumps over the lazy dog</Heading>\n  <Heading size={900} marginTop=\"default\">900: The quick brown fox jumps over the lazy dog</Heading>\n</Pane>\n`}</code></pre>\n    <h2>{`Changing the semantic element`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Heading`}</inlineCode>{` component will always render a `}<inlineCode parentName=\"p\">{`h2`}</inlineCode>{` until you specify otherwise with the `}<inlineCode parentName=\"p\">{`is`}</inlineCode>{` property.\nIt’s important to realize that the style of a heading is independent from the semantic underlying element.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Heading is=\"h3\">Heading h3</Heading>\n`}</code></pre>\n    <PropsTable of=\"Heading\" mdxType=\"PropsTable\" />\n    <h1>{`Text component`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` component is used for single line text.\nThe component renders a `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{` element by default.\nIf you need a multiline paragraph use the `}<inlineCode parentName=\"p\">{`Paragraph`}</inlineCode>{` component.`}</p>\n    <p>{`The size options are:  `}<inlineCode parentName=\"p\">{`300`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`400`}</inlineCode>{` (default), `}<inlineCode parentName=\"p\">{`500`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<div>\n  <div>\n    <Text size={300}>The quick brown fox jumps over the lazy dog</Text>\n  </div>\n  <div>\n    <Text size={400}>The quick brown fox jumps over the lazy dog</Text>\n  </div>\n  <div>\n    <Text size={500}>The quick brown fox jumps over the lazy dog</Text>\n  </div>\n</div>\n`}</code></pre>\n    <h2>{`Set a muted color on a Text component`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Text color=\"muted\">The quick brown fox jumps over the lazy dog</Text>\n`}</code></pre>\n    <h1>{`Paragraph component`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Paragraph`}</inlineCode>{` component is used for multiline text.\nThis renders a `}<inlineCode parentName=\"p\">{`p`}</inlineCode>{` element by default.`}</p>\n    <p>{`The size options are:  `}<inlineCode parentName=\"p\">{`300`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`400`}</inlineCode>{` (default), `}<inlineCode parentName=\"p\">{`500`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<div>\n  <Paragraph size={300} marginTop=\"default\">\n    Size 300. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  </Paragraph>\n  <Paragraph size={400} marginTop=\"default\">\n    Size 400. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  </Paragraph>\n  <Paragraph marginTop=\"default\">\n    Size 500. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  </Paragraph>\n</div>\n`}</code></pre>\n    <h2>{`Set a muted color on a paragraph`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Paragraph color=\"muted\">\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</Paragraph>\n`}</code></pre>\n    <PropsTable of=\"Paragraph\" mdxType=\"PropsTable\" />\n    <h1>{`Link component`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{` component is used for anchor links.\nThis component renders a `}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` element by default.`}</p>\n    <p>{`The size options are:  `}<inlineCode parentName=\"p\">{`300`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`400`}</inlineCode>{` (default), `}<inlineCode parentName=\"p\">{`500`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<div>\n  <Link href=\"#\" marginRight={12}>Default</Link>\n  <Link href=\"#\" marginRight={12} color=\"green\">Green</Link>\n  <Link href=\"#\" marginRight={12} color=\"blue\">Blue</Link>\n  <Link href=\"#\" marginRight={12} color=\"neutral\">Neutral</Link>\n</div>\n`}</code></pre>\n    <PropsTable of=\"Link\" mdxType=\"PropsTable\" />\n    <h1>{`Strong component`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Strong`}</inlineCode>{` component renders strong text.\nThis component renders a `}<inlineCode parentName=\"p\">{`strong`}</inlineCode>{` element by default.\nMake sure to set the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` property if you are using this within a other text component such as a `}<inlineCode parentName=\"p\">{`Paragraph`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<div>\n  <div>\n    <Strong size={300}>The quick brown fox jumps over the lazy dog</Strong>\n  </div>\n  <div>\n    <Strong size={400}>The quick brown fox jumps over the lazy dog</Strong>\n  </div>\n  <div>\n    <Strong size={500}>The quick brown fox jumps over the lazy dog</Strong>\n  </div>\n</div>\n`}</code></pre>\n    <PropsTable of=\"Strong\" mdxType=\"PropsTable\" />\n    <h1>{`Small component`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Small`}</inlineCode>{` component works only inside other text components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Paragraph>\n  The <Small>small</Small> component can only be used in a other text component\n</Paragraph>\n`}</code></pre>\n    <PropsTable of=\"Small\" mdxType=\"PropsTable\" />\n    <h1>{`Code component`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Code`}</inlineCode>{` component is based on the `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` component but renders a `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` element by default.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<div>\n  <div>\n    <Code size={300}>The quick brown fox jumps over the lazy dog</Code>\n  </div>\n  <div>\n    <Code size={400}>The quick brown fox jumps over the lazy dog</Code>\n  </div>\n  <div>\n    <Code size={500}>The quick brown fox jumps over the lazy dog</Code>\n  </div>\n  <div>\n    <Code size={300} appearance=\"minimal\">The quick brown fox jumps over the lazy dog</Code>\n  </div>\n  <div>\n    <Code size={400} appearance=\"minimal\">The quick brown fox jumps over the lazy dog</Code>\n  </div>\n  <div>\n    <Code size={500} appearance=\"minimal\">The quick brown fox jumps over the lazy dog</Code>\n  </div>\n</div>\n`}</code></pre>\n    <PropsTable of=\"Code\" mdxType=\"PropsTable\" />\n    <h1>{`Pre component`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Pre`}</inlineCode>{` component renders a chunk of preformatted text.\nThis component renders a `}<inlineCode parentName=\"p\">{`pre`}</inlineCode>{` element by default.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Pre>\n  Preformatted text.\n</Pre>\n`}</code></pre>\n    <PropsTable of=\"Pre\" mdxType=\"PropsTable\" />\n    <h1>{`UnorderedList component`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<UnorderedList>\n  <ListItem>Lorem ipsum dolor sit amet</ListItem>\n  <ListItem>Consectetur adipiscing elit</ListItem>\n  <ListItem>Integer molestie lorem at massa</ListItem>\n  <ListItem>Facilisis in pretium nisl aliquet</ListItem>\n</UnorderedList>\n`}</code></pre>\n    <h2>{`Changing the size of all list items in a UnorderedList`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<UnorderedList size={300}>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n</UnorderedList>\n`}</code></pre>\n    <h2>{`Adding icons to a list`}</h2>\n    <p>{`The icon property has access to all available icons.`}</p>\n    <h3>{`Set icons for all list items on the list`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<UnorderedList\n  icon=\"tick\"\n  iconColor=\"success\"\n>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n</UnorderedList>\n`}</code></pre>\n    <h3>{`Set icons on each individual list item`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<UnorderedList>\n  <ListItem icon=\"tick-circle\" iconColor=\"success\">\n    Lorem ipsum dolar set amet\n  </ListItem>\n  <ListItem icon=\"tick-circle\" iconColor=\"success\">\n    Lorem ipsum dolar set amet\n  </ListItem>\n  <ListItem icon=\"ban-circle\" iconColor=\"danger\">\n    Lorem ipsum dolar set amet\n  </ListItem>\n  <ListItem icon=\"ban-circle\" iconColor=\"danger\">\n    Lorem ipsum dolar set amet\n  </ListItem>\n</UnorderedList>\n`}</code></pre>\n    <PropsTable of=\"UnorderedList\" mdxType=\"PropsTable\" />\n    <h1>{`OrderedList component`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<OrderedList>\n  <ListItem>Lorem ipsum dolor sit amet</ListItem>\n  <ListItem>Consectetur adipiscing elit</ListItem>\n  <ListItem>Integer molestie lorem at massa</ListItem>\n  <ListItem>Facilisis in pretium nisl aliquet</ListItem>\n</OrderedList>\n`}</code></pre>\n    <h2>{`Changing the size of all list items in a OrderedList`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<OrderedList size={300}>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n  <ListItem>Lorem ipsum dolar set amet</ListItem>\n</OrderedList>\n`}</code></pre>\n    <PropsTable of=\"OrderedList\" mdxType=\"PropsTable\" />\n    <h1>{`ListItem component`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<ListItem>List item. Use inside of a UnorderedList or OrderedList.</ListItem>\n`}</code></pre>\n    <PropsTable of=\"ListItem\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}